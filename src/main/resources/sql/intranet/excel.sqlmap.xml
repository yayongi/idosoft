<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="excel">
	
	<!-- 경비 - 월별 통계 (개인 이력) -->
	<select id="EXCEL0001" parameterType="hashmap" resultType="java.util.LinkedHashMap">
	SELECT 
		CONVERT((@rownum := @rownum+1), CHAR) '번호'
		, A.MEMBER_NO '사번'
		, D.CODE_NAME '경비유형'
		, A.USE_CN '내용'
		, B.NAME '이름'
		, C.CODE_NAME '직급'
		, CONVERT(A.USE_AMOUNT, CHAR) '결제금액'
		, A.USE_DATE '결제일'
		, E.NAME '1차 결재자'
		, CONVERT(A.FIR_SANCTN_DATETIME, CHAR) '1차 결재일'
		, F.NAME '2차 결재자'
		, CONVERT(A.SCD_SANCTN_DATETIME, CHAR) '2차 결재일'
		, CONVERT(A.REG_DATETIME, CHAR) '등록일'
	FROM TB_EXPENSE A
	LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
	LEFT JOIN TB_CODE C
		ON B.POSITION = C.CODE_ID
	LEFT JOIN TB_CODE D
		ON A.EXPENS_TY_CODE = D.CODE_ID
	LEFT JOIN TB_MEMBER E
		ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
	LEFT JOIN TB_MEMBER F
		ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
	JOIN (SELECT @rownum := 0) R
	<where>
		AND A.MEMBER_NO = #{MEMBER_NO}
		AND DATE_FORMAT(A.REG_DATETIME, '%Y-%m-%d') 
			BETWEEN DATE_FORMAT(#{REG_START_DATE}, '%Y-%m-%d') 
				AND DATE_FORMAT(#{REG_END_DATE}, '%Y-%m-%d')
		AND A.SANCTN_STTUS_CODE = 'SS0002'
	</where> 
	ORDER BY A.REG_DATETIME ASC 
	</select>
	
	<!-- 경비 - 월별 통계 -->
	<select id="EXCEL0002" parameterType="hashmap" resultType="java.util.LinkedHashMap">
	SELECT CONVERT((@rownum := @rownum+1), CHAR) '번호', T.* FROM (
		SELECT 
			 A.MEMBER_NO '사번'
			, D.CODE_NAME '경비유형'
			, A.USE_CN '내용'
			, B.NAME '이름'
			, C.CODE_NAME '직급'
			, IFNULL(CONVERT(A.USE_AMOUNT, CHAR),'') '결제금액'
			, A.USE_DATE '결제일'
			, E.NAME '1차 결재자'
			, IFNULL(CONVERT(A.FIR_SANCTN_DATETIME, CHAR),'') '1차 결재일'
			, F.NAME '2차 결재자'
			, IFNULL(CONVERT(A.SCD_SANCTN_DATETIME, CHAR),'') '2차 결재일'
			, IFNULL(CONVERT(A.REG_DATETIME, CHAR) ,'') '등록일'
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
			ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
			ON B.POSITION = C.CODE_ID
		LEFT JOIN TB_CODE D
			ON A.EXPENS_TY_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
			ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
			ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		JOIN (SELECT @rownum := 0) R
		<where>
		AND DATE_FORMAT(A.REG_DATETIME, '%Y-%m-%d') 
			BETWEEN DATE_FORMAT(#{REG_START_DATE}, '%Y-%m-%d') 
				AND DATE_FORMAT(#{REG_END_DATE}, '%Y-%m-%d')
		AND A.SANCTN_STTUS_CODE = 'SS0002'
	</where> 
	ORDER BY B.NAME ASC, A.REG_DATETIME ASC
	) T
	</select>
	
	<!-- 경비 관리 -->
	<select id="EXCEL0003" parameterType="hashmap" resultType="java.util.LinkedHashMap">
	SELECT CONVERT((@rownum := @rownum+1), CHAR) '번호', T.* FROM (
		SELECT 
			 A.MEMBER_NO '사번'
			, D.CODE_NAME '경비유형'
			, A.USE_CN '내용'
			, B.NAME '이름'
			, C.CODE_NAME '직급'
			, IFNULL(CONVERT(A.USE_AMOUNT, CHAR),'') '결제금액'
			, A.USE_DATE '결제일'
			, E.NAME '1차 결재자'
			, IFNULL(CONVERT(A.FIR_SANCTN_DATETIME, CHAR), '') '1차 결재일'
			, F.NAME '2차 결재자'
			, G.CODE_NAME '결재상태'
			, IFNULL(CONVERT(A.SCD_SANCTN_DATETIME, CHAR), '') '2차 결재일'
			, IFNULL(CONVERT(A.REG_DATETIME, CHAR), '') '등록일'
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
			ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
			ON B.POSITION = C.CODE_ID
		LEFT JOIN TB_CODE D
			ON A.EXPENS_TY_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
			ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
			ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		LEFT JOIN TB_CODE G
			ON A.SANCTN_STTUS_CODE = G.CODE_ID
		JOIN (SELECT @rownum := 0) R
		<where>
			<if test="isAdmin != 1">
				<if test="isAdmin != 1">
				AND A.MEMBER_NO = #{MEMBER_NO}
				</if>
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE CONCAT('%',#{name},'%')
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE CONCAT('%',#{memo},'%')
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
		</where>
		ORDER BY A.SANCTN_STTUS_CODE ASC, A.EXPENS_NO DESC
	) T
	</select>
	<!-- 경비/결재 관리 -->
	<select id="EXCEL0004" parameterType="hashmap" resultType="java.util.LinkedHashMap">
	SELECT CONVERT((@rownum := @rownum+1), CHAR) '번호', T.* FROM (
		SELECT 
			 A.MEMBER_NO '사번'
			, D.CODE_NAME '경비유형'
			, A.USE_CN '내용'
			, B.NAME '이름'
			, C.CODE_NAME '직급'
			, IFNULL(CONVERT(A.USE_AMOUNT, CHAR),'') '결제금액'
			, A.USE_DATE '결제일'
			, G.CODE_NAME '결재상태'
			, E.NAME '1차 결재자'
			, IFNULL(CONVERT(A.FIR_SANCTN_DATETIME, CHAR), '') '1차 결재일'
			, F.NAME '2차 결재자'
			, IFNULL(CONVERT(A.SCD_SANCTN_DATETIME, CHAR), '') '2차 결재일'
			, IFNULL(CONVERT(A.REG_DATETIME, CHAR), '') '등록일'
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
			ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
			ON B.POSITION = C.CODE_ID
		LEFT JOIN TB_CODE D
			ON A.EXPENS_TY_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
			ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
			ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		LEFT JOIN TB_CODE G
			ON A.SANCTN_STTUS_CODE = G.CODE_ID
		JOIN (SELECT @rownum := 0) R
		<where>
			<if test="isAdmin != 1">
				<if test="MEMBER_NO != null">
					AND (
						A.FIR_SANCTENER_MEMBER_NO=#{MEMBER_NO} 
						OR A.SANCTNER_MEMBER_NO=#{MEMBER_NO}
					)
				</if>
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE CONCAT('%',#{name},'%')
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE CONCAT('%',#{memo},'%')
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
		</where>
		ORDER BY A.SANCTN_STTUS_CODE ASC, A.EXPENS_NO DESC
	) T
	</select>
	<!-- 통신비 년별 조회 -->
	<select id="EXCEL0005_1" parameterType="hashmap" resultType="java.util.LinkedHashMap">
	SELECT
		A.MEMBER_NO '사번',
		A.NAME '이름',
		B.CODE_NAME '직급',
		('') '구분',
		CASE WHEN 
		CONCAT(#{YEAR}, '-01-01') <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 									/* 입사일 기준 처리 조건 */
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> CONCAT(#{YEAR}, '-01-01') 											/* 현재일 기준 처리 조건 */
		<![CDATA[ && ]]> CONCAT(#{YEAR}, '-01-01') <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01') 		/* 퇴사일 기준 처리 조건 */
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-01-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 																																	
		ELSE '0' END AS "1월",
		
		CASE WHEN 
		DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 1 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-02-01'), INTERVAL 1 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 1 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-02-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-02-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-02-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "2월",
		CASE WHEN
		DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 2 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 2 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 2 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-03-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-03-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-03-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "3월",
		CASE WHEN
		DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 3 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 3 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 3 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-04-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-04-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-04-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "4월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 4 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 4 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 4 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-05-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-05-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-05-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "5월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 5 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 5 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 5 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-06-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-06-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-06-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE)
		ELSE '0' END AS "6월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 6 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 6 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 6 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-07-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-07-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-07-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "7월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 7 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 7 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 7 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-08-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-08-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-08-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE)  
		ELSE '0' END AS "8월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 8 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 8 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 8 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-09-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-09-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-09-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "9월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 9 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 9 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 9 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-10-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-10-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-10-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE)   
		ELSE '0' END AS "10월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 10 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 10 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 10 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-11-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-11-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-11-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "11월",
		CASE WHEN DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 11 MONTH) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m'), '-01') 
		<![CDATA[ && ]]> CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '-01') <![CDATA[ > ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 11 MONTH) 
		<![CDATA[ && ]]> DATE_ADD(CONCAT(#{YEAR}, '-01-01'), INTERVAL 11 MONTH) <![CDATA[ < ]]> CONCAT(DATE_FORMAT(IFNULL(A.RET_DATE,'9999-12-31'), '%Y-%m'), '-01')
		THEN IF(DATE_FORMAT(A.ENTRY_DATE, '%Y-%m') <![CDATA[ >= ]]> DATE_FORMAT(CONCAT(#{YEAR}, '-12-01'), '%Y-%m')					/* 그달에 입사한 경우 */
		, ROUND((B.NOTE / DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-12-01')), '%d')) 
		* (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-12-01')), DATE_FORMAT(A.ENTRY_DATE, '%Y-%m-%d')) + 1))
		, B.NOTE) 
		ELSE '0' END AS "12월"
	FROM TB_MEMBER A
	LEFT JOIN TB_CODE B
	ON A.POSITION = B.CODE_ID
	<where>
		<if test="isAdmin != 1">
			AND A.MEMBER_NO = #{MEMBER_NO}
		</if>
		AND A.MEMBER_NO != '99999999'
	</where>
	ORDER BY A.NAME ASC
	</select>
	<!-- 교통비 년별 조회 -->
	<select id="EXCEL0005_2" parameterType="hashmap" resultType="java.util.LinkedHashMap">
	SELECT 
	B.MEMBER_NO '사번',
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-01') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-01')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-01')																									/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')														/* step3 */
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)											/* step3 true */			
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-01-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)											/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-01')																								/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-01-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-01-01')),CONCAT(#{YEAR}, '-01-01')) + 1)
				)
			)																
		,0)
	)) AS "1월",
	SUM(
		ROUND(IF(																																							
		DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-02') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-02')			/* step1 */																													  
		,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-02')																									/* step2 */
			,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')														/* step3 */
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-02-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)										/* step3 true */			
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-02-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-02-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)										/* step3 false */
			)																					
			,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-02')																								/* step4 */	
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-02-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-02-01')) + 1)
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-02-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-02-01')),CONCAT(#{YEAR}, '-02-01')) + 1)
			)
		)																
		,0)
	)) AS "2월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-03') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-03')		/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-03')																								/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')													/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-03-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)									/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-03-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-03-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)									/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-03')																							/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-03-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-03-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-03-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-03-01')),CONCAT(#{YEAR}, '-03-01')) + 1)
				)
			)																
		,0)
	)) AS "3월",	
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-04') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-04')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-04')																									/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')														/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-04-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)										/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-04-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-04-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)										/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-04')																								/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-04-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-04-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-04-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-04-01')),CONCAT(#{YEAR}, '-04-01')) + 1)
				)
			)																
		,0)
	)) AS "4월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-05') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-05')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-05')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-05-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-05-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-05-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-05')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-05-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-05-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-05-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-05-01')),CONCAT(#{YEAR}, '-05-01')) + 1)
				)
			)																
		,0)
	)) AS "5월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-06') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-06')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-06')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-06-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-06-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-06-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-06')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-06-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-06-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-06-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-06-01')),CONCAT(#{YEAR}, '-06-01')) + 1)
				)
			)																
		,0)
	)) AS "6월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-07') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-07')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-07')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-07-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-07-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-07-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-07')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-07-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-07-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-07-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-07-01')),CONCAT(#{YEAR}, '-07-01')) + 1)
				)
			)																
		,0)
	)) AS "7월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-08') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-08')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-08')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-08-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-08-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-08-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-08')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-08-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-08-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-08-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-08-01')),CONCAT(#{YEAR}, '-08-01')) + 1)
				)
			)																
		,0)
	)) AS "8월",
	SUM(
	ROUND(IF(																																							
		DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-09') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-09')			/* step1 */																													  
		,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-09')																						/* step2 */
			,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-09-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-09-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-09-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
			)																					
			,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-09')																					/* step4 */	
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-09-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-09-01')) + 1)
				,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-09-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-09-01')),CONCAT(#{YEAR}, '-09-01')) + 1)
			)
		)																
	,0)
	)) AS "9월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-10') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-10')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-10')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-10-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-10-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-10-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-10')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-10-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-10-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-10-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-10-01')),CONCAT(#{YEAR}, '-10-01')) + 1)
				)
			)																
		,0)
	)) AS "10월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-11') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-11')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-11')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-11-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-11')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-11-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-01-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-11-01')),CONCAT(#{YEAR}, '-11-01')) + 1)
				)
			)																
		,0)
	)) AS "11월",
	SUM(
		ROUND(IF(																																							
			DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ >= ]]> CONCAT(#{YEAR}, '-12') <![CDATA[ && ]]> DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ <= ]]> CONCAT(#{YEAR}, '-12')			/* step1 */																													  
			,IF(DATE_FORMAT(INPT_BGNDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-12')																						/* step2 */
				,IF(CONCAT(DATE_FORMAT(INPT_BGNDE, '%Y-%m'), '-01') <![CDATA[ = ]]> CONCAT(DATE_FORMAT(INPT_ENDDE, '%Y-%m'), '-01')								/* step3 */
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-12-01')), '%d')) * (DATEDIFF(DATE_FORMAT(INPT_ENDDE, '%Y-%m-%d'),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d'))	+ 1)			/* step3 true */			
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-12-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-12-01')),DATE_FORMAT(INPT_BGNDE, '%Y-%m-%d')) + 1)			/* step3 false */
				)																					
				,IF(DATE_FORMAT(INPT_ENDDE, '%Y-%m') <![CDATA[ = ]]> CONCAT(#{YEAR}, '-12')																					/* step4 */	
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-12-01')), '%d')) * (DATEDIFF(INPT_ENDDE,CONCAT(#{YEAR}, '-12-01')) + 1)
					,(C.TRANSPORT_CT/DATE_FORMAT(LAST_DAY(CONCAT(#{YEAR}, '-12-01')), '%d')) * (DATEDIFF(LAST_DAY(CONCAT(#{YEAR}, '-12-01')),CONCAT(#{YEAR}, '-12-01')) + 1)
				)
			)																
		,0)
	)) AS "12월"														
	FROM TB_PROJECT_MEMBER A
	RIGHT JOIN TB_MEMBER B
	ON A.MEMBER_NO = B.MEMBER_NO
	LEFT JOIN TB_PROJECT C
	ON A.PROJECT_NO = C.PROJECT_NO
	<where>
		<if test="isAdmin != 1">
			AND B.MEMBER_NO = #{MEMBER_NO}
		</if>
		AND B.MEMBER_NO != '99999999'
	</where>
	GROUP BY 사번
	ORDER BY B.NAME ASC
	<!-- 
	1. 종료날짜가  해당 월보다 작거나 같은지 체크 */
	/* 1. true : 2. 해당 월에 종료하는 날짜인지 체크  */
	/* 2. true : 3. 시작날짜와 종료날짜가 같은 달 인지 여부 	 */ 
	/* 2. false :  4. 해당 월에 종료되는 날짜인지 체크 */
	/* 3. true : 시작날짜부터 종료일 까지 일 수를 계산*/
	/* 3. false : 시작날짜부터 달의 마지막 날짜까지 일 수 계산*/
	/* 4. true : 그달의 첫 날부터 종료 일 수 까지 계산  */
	/* 4. false : 그달의 첫 날부터 마지막 일 수 까지 계산  */
	/* 1. false : 0
	/* DATEDIFF() 사용시 차이 계산시, 일수로 하루 빠져 하루를 더해주었습니다. 
	
	 -->
	</select>
</mapper>
