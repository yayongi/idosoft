<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="expense">
	<!-- datetime 형식을 가져올 때는 date_format으로 변환 후, alias를 잡아줘야 된다. -->
	<!-- 소속 프로젝트 PM 번호 추출 -->
	<select id="getProjectPMNo" resultType="String">
		SELECT B.PM FROM
		TB_PROJECT_MEMBER A
		LEFT JOIN TB_PROJECT B
		ON A.PROJECT_NO =
		B.PROJECT_NO
		WHERE NOW() BETWEEN A.INPT_BGNDE AND A.INPT_ENDDE
	</select>
	<!-- 1차결재자 번호 추출 -->
	<select id="getFirSancternerMno" resultType="String">
		SELECT
		MEMBER_NO
		FROM TB_MEMBER
		WHERE APPROVAL_YN = 1
	</select>
	<!-- 직급인 대표인 사원 번호 추출 -->
	<select id="getRepresentativeNo" resultType="String">
		SELECT MEMBER_NO
		FROM (
		SELECT
		ROW_NUMBER() OVER() ROW
		, MEMBER_NO
		, REG_DATETIME
		FROM TB_MEMBER
		WHERE POSITION = "RK0000"
		ORDER BY REG_DATETIME ASC
		) MEMBER
	</select>
	<!-- 경비등록 -->
	<update id="insertExpense" parameterType="hashmap">
		INSERT INTO
		TB_EXPENSE(MEMBER_NO, EXPENS_TY_CODE, USE_DATE, USE_AMOUNT
		, USE_CN, FIR_SANCTENER_MEMBER_NO, SANCTNER_MEMBER_NO
		, EXPENS_ATCHMNF_ID)
		VALUES (#{MEMBER_NO}, #{EXPENS_TY_CODE}, #{USE_DATE}, #{USE_AMOUNT}
		,#{USE_CN}, #{FIR_SANCTENER_MEMBER_NO}, #{SANCTNER_MEMBER_NO}
		, #{EXPENS_ATCHMNF_ID})
	</update>
	<!-- 경비수정 -->
	<update id="updateExpense" parameterType="hashmap">
		UPDATE TB_EXPENSE
		<set>
			<if test="EXPENS_TY_CODE != null">EXPENS_TY_CODE=#{EXPENS_TY_CODE},</if>
			<if test="USE_DATE != null">USE_DATE=#{USE_DATE},</if>
			<if test="USE_AMOUNT != null">USE_AMOUNT=#{USE_AMOUNT},</if>
			<if test="UPD_DATETIME != null">UPD_DATETIME=NOW(),</if>
			<if test="USE_CN != null">USE_CN=#{USE_CN},</if>
			<if test="EXPENS_ATCHMNF_ID != null">EXPENS_ATCHMNF_ID=#{EXPENS_ATCHMNF_ID}</if>
		</set>
		WHERE EXPENS_NO = #{EXPENS_NO}
	</update>
	<!-- 경비관리목록리스트 -->
	<select id="getAnnalList" parameterType="hashmap"
		resultType="hashmap">
		SELECT A.EXPENS_NO seq
		, C.CODE_NAME expenseTypeText
		, A.USE_CN memo
		, A.SANCTN_STTUS_CODE status
		, D.CODE_NAME statusText
		, B.NAME register
		, A.USE_AMOUNT pay
		, A.USE_DATE payDate
		, A.RETURN_CN rejectMemo
		, E.NAME prevAuthPerson
		, F.NAME authPerson
		, A.FIR_SANCTN_DATETIME prevAuthDate
		, A.SCD_SANCTN_DATETIME authDate
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
		ON A.EXPENS_TY_CODE = C.CODE_ID
		LEFT JOIN TB_CODE D
		ON A.SANCTN_STTUS_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
		ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
		ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		<where>
			<if test="isAdmin != 1">
				AND A.MEMBER_NO = #{MEMBER_NO}
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE '%' + #{name} + '%'
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE '%' + #{memo} + '%'
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
		</where>
		ORDER BY A.EXPENS_NO DESC
	</select>
	<!-- 경비관리목록 총 개수 -->
	<select id="getAnnalListCount" parameterType="hashmap"
		resultType="_int">
		SELECT COUNT(*)
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		<where>
			<if test="isAdmin != 1">
				AND A.MEMBER_NO = #{MEMBER_NO}
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE '%' + #{name} + '%'
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE '%' + #{memo} + '%'
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
		</where>
	</select>
	<!-- 코드 -->
	<select id="getCode" parameterType="hashmap"
		resultType="hashmap">
		SELECT CODE_ID value, CODE_NAME label
		FROM TB_CODE
		WHERE UPPER_CODE = #{TYPE}
		ORDER BY CODE_ID ASC
	</select>
	<!-- 경비관리목록-->
	<select id="getAnnView" parameterType="hashmap"
		resultType="hashmap">
		SELECT A.EXPENS_NO seq
		, A.MEMBER_NO mno
		, B.NAME name
		, B.PHONE_NUM phone
		, B.EMAIL email
		, A.EXPENS_TY_CODE expenseType
		, C.CODE_NAME expenseTypeText
		, A.USE_CN memo
		, A.SANCTN_STTUS_CODE status
		, D.CODE_NAME statusText
		, A.USE_AMOUNT pay
		, A.USE_DATE payDate
		, A.RETURN_CN rejectMemo
		, A.FIR_SANCTENER_MEMBER_NO prevAuthPersonNO
		, A.SANCTNER_MEMBER_NO authPersonNO
		, E.NAME prevAuthPerson
		, F.NAME authPerson
		, A.FIR_SANCTN_DATETIME prevAuthDate
		, A.SCD_SANCTN_DATETIME authDate
		, A.EXPENS_ATCHMNF_ID filePath
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
		ON A.EXPENS_TY_CODE = C.CODE_ID
		LEFT JOIN TB_CODE D
		ON A.SANCTN_STTUS_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
		ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
		ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		WHERE A.EXPENS_NO = #{EXPENS_NO}
	</select>
	<!-- 경비결재목록 -->
	<select id="getAppView" parameterType="hashmap"
		resultType="hashmap">
		SELECT A.EXPENS_NO seq
		, B.NAME name
		, B.PHONE_NUM phone
		, B.EMAIL email
		, A.EXPENS_TY_CODE expenseType
		, C.CODE_NAME expenseTypeText
		, A.USE_CN memo
		, A.SANCTN_STTUS_CODE status
		, D.CODE_NAME statusText
		, B.NAME register
		, A.USE_AMOUNT pay
		, A.USE_DATE payDate
		, A.RETURN_CN rejectMemo
		, A.FIR_SANCTENER_MEMBER_NO prevAuthPersonNO
		, A.SANCTNER_MEMBER_NO authPersonNO
		, E.NAME prevAuthPerson
		, F.NAME authPerson
		, A.FIR_SANCTN_DATETIME prevAuthDate
		, A.SCD_SANCTN_DATETIME authDate
		, A.EXPENS_ATCHMNF_ID filePath
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
		ON A.EXPENS_TY_CODE = C.CODE_ID
		LEFT JOIN TB_CODE D
		ON A.SANCTN_STTUS_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
		ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
		ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		<where>
			AND A.EXPENS_NO = #{EXPENS_NO}
			<if test="isAdmin != 1">
				<if test="MEMBER_NO != null">
					AND (
						A.FIR_SANCTENER_MEMBER_NO=#{MEMBER_NO} 
						OR A.SANCTNER_MEMBER_NO=#{MEMBER_NO}
					)
				</if>
			</if>
		</where>
	</select>
	<!-- 경비 삭제 -->
	<delete id="deleteExpense" parameterType="hashmap">
		DELETE 
		FROM TB_EXPENSE
		WHERE EXPENS_NO = #{EXPENS_NO}
	</delete>
	<!-- 경비 총금액 -->
	<select id="getTotalAmount" parameterType="hashmap" resultType="_int">
		SELECT SUM(USE_AMOUNT) 
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		<where>
			<if test="isAdmin != 1">
				AND A.MEMBER_NO = #{MEMBER_NO}
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE '%' + #{name} + '%'
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE '%' + #{memo} + '%'
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
			AND A.SANCTN_STTUS_CODE = 'SS0002'
		</where>
	</select>
	<!-- 결재처리 -->
	<update id="updateProcessApproval" parameterType="hashmap">
		UPDATE TB_EXPENSE
		<set>
			<!-- 1차결재자 결재 처리 -->
			<if test="isRequest == 'FIR_APP'"> 
			SANCTN_STTUS_CODE='SS0001',
			FIR_SANCTN_DATETIME=NOW(),
			</if>
			<!-- 2차결재자 결재 처리 -->
			<if test="isRequest == 'APP'">
			SANCTN_STTUS_CODE='SS0002',
			SCD_SANCTN_DATETIME=NOW(),
			</if>
			<!-- 반려 처리 -->
			<if test="isRequest == 'REG'">
			SANCTN_STTUS_CODE='SS0003',
			FIR_SANCTN_DATETIME=NULL,
			SCD_SANCTN_DATETIME=NULL,
			RETURN_CN=#{RETURN_CN}
			</if>
		</set>
		<where>
				AND EXPENS_NO = #{EXPENS_NO}
			<if test="isAdmin != 1">
				<if test="isRequest == 'FIR_APP'">
					AND FIR_SANCTENER_MEMBER_NO = #{MEMBER_NO}
				</if>
				<if test="isRequest == 'APP'">
					AND SANCTNER_MEMBER_NO = #{MEMBER_NO}
				</if>
				<if test="isRequest == 'REG'">
					AND 
					(
						FIR_SANCTENER_MEMBER_NO = #{MEMBER_NO} OR
						SANCTNER_MEMBER_NO = #{MEMBER_NO} 
						
					) 
				</if>
			</if>
		</where>
	</update>
	
	<!-- 경비결재목록리스트 -->
	<select id="getApprovalList" parameterType="hashmap" resultType="hashmap">
		SELECT A.EXPENS_NO seq
		, C.CODE_NAME expenseTypeText
		, A.USE_CN memo
		, A.SANCTN_STTUS_CODE status
		, D.CODE_NAME statusText
		, B.NAME register
		, A.USE_AMOUNT pay
		, A.USE_DATE payDate
		, A.RETURN_CN rejectMemo
		, A.FIR_SANCTENER_MEMBER_NO prevAuthPersonNO
		, A.SANCTNER_MEMBER_NO authPersonNO
		, E.NAME prevAuthPerson
		, F.NAME authPerson
		, A.FIR_SANCTN_DATETIME prevAuthDate
		, A.SCD_SANCTN_DATETIME authDate
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		LEFT JOIN TB_CODE C
		ON A.EXPENS_TY_CODE = C.CODE_ID
		LEFT JOIN TB_CODE D
		ON A.SANCTN_STTUS_CODE = D.CODE_ID
		LEFT JOIN TB_MEMBER E
		ON A.FIR_SANCTENER_MEMBER_NO = E.MEMBER_NO
		LEFT JOIN TB_MEMBER F
		ON A.SANCTNER_MEMBER_NO = F.MEMBER_NO
		<where>
			<if test="isAdmin != 1">
				<if test="MEMBER_NO != null">
					AND (
						A.FIR_SANCTENER_MEMBER_NO=#{MEMBER_NO} 
						OR A.SANCTNER_MEMBER_NO=#{MEMBER_NO}
					)
				</if>
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE '%' + #{name} + '%'
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE '%' + #{memo} + '%'
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
		</where>
		ORDER BY A.EXPENS_NO DESC
	</select>
	<!-- 경비 총금액 -->
	<select id="getAppTotalAmount" parameterType="hashmap" resultType="_int">
		SELECT SUM(USE_AMOUNT) 
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		<where>
			<if test="isAdmin != 1">
				<if test="MEMBER_NO != null">
					AND (
						A.FIR_SANCTENER_MEMBER_NO=#{MEMBER_NO} 
						OR A.SANCTNER_MEMBER_NO=#{MEMBER_NO}
					)
				</if>
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE '%' + #{name} + '%'
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE '%' + #{memo} + '%'
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
			AND SANCTN_STTUS_CODE = 'SS0002'
		</where>
	</select>
	<!-- 경비관리목록 총 개수 -->
	<select id="getAppAnnalListCount" parameterType="hashmap"
		resultType="_int">
		SELECT COUNT(*)
		FROM TB_EXPENSE A
		LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
		<where>
			<if test="isAdmin != 1">
				<if test="MEMBER_NO != null">
					AND (
						A.FIR_SANCTENER_MEMBER_NO=#{MEMBER_NO} 
						OR A.SANCTNER_MEMBER_NO=#{MEMBER_NO}
					)
				</if>
			</if>
			<if test="name != null and name !=''">
				AND B.NAME LIKE '%' + #{name} + '%'
			</if>
			<if test="expenseType != null">
				AND A.EXPENS_TY_CODE = #{expenseType}
			</if>
			<if test="status != null">
				AND A.SANCTN_STTUS_CODE = #{status}
			</if>
			<if test="memo != null and memo !=''">
				AND A.USE_CN LIKE '%' + #{memo} + '%'
			</if>
			AND DATE_FORMAT(A.USE_DATE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{payStDt}, '%Y-%m-%d') AND DATE_FORMAT(#{payEdDt}, '%Y-%m-%d')
		</where>
	</select>
	
	<!-- 경비 진행 -->
	<update id="Proceed" parameterType="hashmap">
		UPDATE TB_EXPENSE
		<set>
			<if test="EXPENS_TY_CODE != null">EXPENS_TY_CODE=#{EXPENS_TY_CODE},</if>
			<if test="USE_DATE != null">USE_DATE=#{USE_DATE},</if>
			<if test="USE_AMOUNT != null">USE_AMOUNT=#{USE_AMOUNT},</if>
			<if test="UPD_DATETIME != null">UPD_DATETIME=NOW(),</if>
			<if test="USE_CN != null">USE_CN=#{USE_CN},</if>
			<if test="EXPENS_ATCHMNF_ID != null">EXPENS_ATCHMNF_ID=#{EXPENS_ATCHMNF_ID},</if>
			SANCTN_STTUS_CODE='SS0000',
			RETURN_CN=''
		</set>
		WHERE EXPENS_NO = #{EXPENS_NO}
	</update>
	
	<!-- 다중 결재처리 -->
	<update id="multiplexApproval" parameterType="hashmap">
		UPDATE TB_EXPENSE
		<set>
			<!-- 1차결재자 결재 처리 -->
			<if test="isRequest == 'FIR_APP'"> 
			SANCTN_STTUS_CODE='SS0001',
			FIR_SANCTN_DATETIME=NOW(),
			</if>
			<!-- 2차결재자 결재 처리 -->
			<if test="isRequest == 'APP'">
			SANCTN_STTUS_CODE='SS0002',
			SCD_SANCTN_DATETIME=NOW(),
			</if>
		</set>
		<where>
			AND EXPENS_NO IN
			<foreach item="item" index="index" collection="noList" open="("
				separator="," close=")">
				#{item}
			</foreach>
			<if test="isAdmin != 1">
				<if test="isRequest == 'FIR_APP'">
					AND FIR_SANCTENER_MEMBER_NO = #{MEMBER_NO}
				</if>
				<if test="isRequest == 'APP'">
					AND SANCTNER_MEMBER_NO = #{MEMBER_NO}
				</if>
			</if>
		</where>
	</update>
	
	<!-- 경비 월 통계 -->
	<select id="getMonthlyExpenseStatistics" parameterType="hashmap" resultType="hashmap">
		SELECT 
			A.MEMBER_NO MEMBER_NO
			, B.NAME NAME
			, C.CODE_NAME POSITION
			, SUM(A.USE_AMOUNT) TOTAL_AMOUNT
		FROM 
			TB_EXPENSE A
			LEFT JOIN TB_MEMBER B
			ON A.MEMBER_NO = B.MEMBER_NO
			LEFT JOIN TB_CODE C
			ON B.POSITION = C.CODE_ID
		WHERE 
			DATE_FORMAT(A.REG_DATETIME, '%Y-%m-%d') 
				BETWEEN DATE_FORMAT(#{REG_START_DATE}, '%Y-%m-%d') 
				AND DATE_FORMAT(#{REG_END_DATE}, '%Y-%m-%d')
		GROUP BY A.MEMBER_NO
		ORDER BY B.NAME ASC
	</select>
	<!-- 경비 월 통계 개인 내역 -->
	<select id="getMonthlyExpenseRecode" parameterType="hashmap" resultType="hashmap">
	SELECT 
		 A.EXPENS_NO EXPENSE_NO
		, A.MEMBER_NO MEMBER_NO
		, D.CODE_NAME
		, A.USE_CN USE_CN
		, B.NAME NAME
		, C.CODE_NAME POSITION
		, A.USE_AMOUNT AMOUNT
		, A.USE_DATE USE_DATE
	FROM TB_EXPENSE A
	LEFT JOIN TB_MEMBER B
		ON A.MEMBER_NO = B.MEMBER_NO
	LEFT JOIN TB_CODE C
		ON B.POSITION = C.CODE_ID
	LEFT JOIN TB_CODE D
		ON A.EXPENS_TY_CODE = D.CODE_ID
	<where>
		AND A.MEMBER_NO = #{MEMBER_NO}
		AND DATE_FORMAT(A.REG_DATETIME, '%Y-%m-%d') 
			BETWEEN DATE_FORMAT(#{REG_START_DATE}, '%Y-%m-%d') 
				AND DATE_FORMAT(#{REG_END_DATE}, '%Y-%m-%d')
	</where> 
	</select>
	
	<select id="getMonthTotalAmount" parameterType="hashmap" resultType="_int">
	SELECT 
		SUM(A.USE_AMOUNT) TOTTAL_AMOUNT
	FROM TB_EXPENSE A
	WHERE 
		DATE_FORMAT(A.REG_DATETIME, '%Y-%m-%d') 
			BETWEEN DATE_FORMAT('2020-03-01', '%Y-%m-%d') 
			AND DATE_FORMAT('2020-03-31', '%Y-%m-%d')
	</select>
	
	<select id="getIndiMonthTotalAmount" parameterType="hashmap" resultType="_int">
	SELECT 
		SUM(A.USE_AMOUNT) TOTTAL_AMOUNT
	FROM TB_EXPENSE A
	<where>
	AND DATE_FORMAT(A.REG_DATETIME, '%Y-%m-%d') 
		BETWEEN DATE_FORMAT('2020-03-01', '%Y-%m-%d') 
		AND DATE_FORMAT('2020-03-31', '%Y-%m-%d')
	AND MEMBER_NO = #{MEMBER_NO}
	</where>
				
	</select>
</mapper>