<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<parameterMap id="MemberVO" type="kr.co.idosoft.intranet.member.vo.MemberVO"  />
	<resultMap id="MemberVO" type="kr.co.idosoft.intranet.member.vo.MemberVO"  />
	
	<!-- 사원 정보 리스트 -->
	<select id="selectMemberList" resultMap="MemberVO">
		SELECT 
			*,
			B.CODE_NAME
		FROM TB_MEMBER A
		INNER JOIN TB_CODE B
		WHERE A.POSITION = B.CODE_ID
		ORDER BY A.POSITION
	</select>
	
	<!-- 사원 정보  -->
	<select id="getMemberInfo" resultMap="MemberVO" parameterType="String">
		SELECT 
		A.*,
		B.CODE_NAME
		FROM 
		(
			SELECT	
				*
			FROM TB_MEMBER
			WHERE MEMBER_NO=#{member_no}
		) A
		INNER JOIN TB_CODE B
		WHERE A.POSITION = B.CODE_ID
	</select>
	
	<!-- 사원 정보 등록 -->
	<insert id="registerMemberInfo" parameterMap="MemberVO">
		INSERT INTO TB_MEMBER 
		(
			MEMBER_NO,			
			EMAIL,				
			PWD,				
			NAME,				
			POSITION,			
			ADDRESS_1,			
			ADDRESS_2,
			ZIP_CODE,			
			PHONE_NUM,			
			BIRTH_DATE,			
			MARRIAGE_DATE,		
			CAREER_DATE,			
			ENTRY_DATE,			
			SCHOOL_MAJOR,		
			SCHOOL_CAREER,		
			MOONCAL_YN,			
			CERT_YN,				
			MANAGER_YN,			
			APPROVAL_YN,		
			PHOTO_PATH,			
			CERTFILE_JOB_PATH,	
			CERTFILE_SCHOOL_PATH,
			REG_DATETIME,		
			REG_ID,				
			RET_DATE,			
			NOTE,				
			TEMP_COLUM
		)
		VALUES
		(
			#{member_no},
			#{email},
			#{pwd},
			#{name},
			#{position},
			#{address_1},
			#{address_2},
			#{zip_code},
			#{phone_num},
			#{birth_date},
			#{marriage_date},
			#{career_date},
			#{entry_date},
			#{school_major},
			#{school_career},
			#{mooncal_yn},
			#{cert_yn},
			#{manager_yn},
			#{approval_yn},
			#{photo_path},
			#{certfile_job_path},
			#{certfile_school_path},
			DATE_FORMAT(NOW(),'%Y%m%d'),
			#{reg_id},
			#{ret_date},
			#{note},
			#{temp_colum}
		)
	</insert>
	
	<!-- 사원 정보 수정 -->
	<update id="updateMemberInfo" parameterMap="MemberVO">
		UPDATE TB_MEMBER 
		SET 
			EMAIL = #{email},
			NAME = #{name},
			POSITION = #{position},
			ADDRESS_1 = #{address_1},
			ADDRESS_2 = #{address_2},
			ZIP_CODE = #{zip_code},
			PHONE_NUM = #{phone_num},
			BIRTH_DATE = #{birth_date},
			MARRIAGE_DATE = #{marriage_date},
			CAREER_DATE = #{career_date},
			ENTRY_DATE = #{entry_date},
			SCHOOL_MAJOR = #{school_major},
			SCHOOL_CAREER = #{school_career},
			MOONCAL_YN = #{mooncal_yn},
			CERT_YN = #{cert_yn},
			MANAGER_YN = #{manager_yn},
			APPROVAL_YN = #{approval_yn},
			PHOTO_PATH = #{photo_path},
			CERTFILE_JOB_PATH = #{certfile_job_path},
			CERTFILE_SCHOOL_PATH = #{certfile_school_path},
			UPD_DATE = DATE_FORMAT(NOW(),'%Y%m%d'),
			RET_DATE = #{ret_date},
			UPD_ID = #{upd_id},
			NOTE = #{note},
			TEMP_COLUM = #{temp_colum}
		WHERE MEMBER_NO=#{member_no}
	</update>
	
	<!-- 사원 정보 삭제 -->
	<update id="deleteMemberInfo" parameterType="String">
		<foreach collection="list" item="item" index="index" separator=" , " >
			UPDATE TB_MEMBER 
			SET 
				RET_DATE=DATE_FORMAT(NOW(),'%Y%m%d')
	        WHERE MEMBER_NO=#{item}
	    </foreach>	
	</update>
	
	<!-- 사원 정보 삭제 -->
	<update id="initializePassword" parameterMap="MemberVO">
		UPDATE TB_MEMBER 
		SET 
			PWD=#{pwd}
        WHERE MEMBER_NO=#{member_no}
	</update>
	
	<!-- 코드 정보 -->
	<select id="getCodeInfo" resultType="HashMap">
		SELECT 
		*
		FROM TB_CODE
		WHERE UPPER_CODE = #{code_id}
	</select>
	
	<!-- 생일 가져오기 -->
	<select id="getBirthDate" parameterType="HashMap" resultType="HashMap">
		SELECT 
			A.NAME,
			(SELECT CODE_NAME FROM TB_CODE WHERE CODE_ID = A.POSITION) AS POSITION
		FROM
		(
			SELECT 
				NAME,
				POSITION
			FROM TB_MEMBER
				WHERE (BIRTH_DATE = #{solarDate} AND MOONCAL_YN = 0)
				OR (BIRTH_DATE = #{moonDate} AND MOONCAL_YN = 1) 
		) A
	</select>
	
	<!-- 결혼기념일 가져오기 -->
	<select id="getMarriageDate" parameterType="String" resultType="HashMap">
		SELECT 
			A.NAME,
			(SELECT CODE_NAME FROM TB_CODE WHERE CODE_ID = A.POSITION) AS POSITION
		FROM
		(
			SELECT 
				NAME,
				POSITION
			FROM TB_MEMBER
				WHERE MARRIAGE_DATE = #{solarDate} 
		) A
	</select>
	
	<!-- 이메일 중복 검사 -->
	<select id="checkemail" parameterMap="MemberVO" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM TB_MEMBER
			WHERE EMAIL = #{email}
			<if test="member_no != null">
			AND MEMBER_NO != #{member_no} 
			</if>
	</select>
	
	<!-- 같은연도 사번 검색 -->
	<select id="findMemberNo" parameterType="String" resultType="String">
		SELECT
			MAX(MEMBER_NO)
		FROM
			TB_MEMBER
		WHERE MEMBER_NO LIKE CONCAT(#{member_no}, '%')
	</select>
	
	<!-- 엑셍 -->
	<select id="exportExcelList" parameterMap="MemberVO" resultType="java.util.LinkedHashMap">
		SELECT
		    MEMBER_NO,
			EMAIL ,
			NAME ,
			POSITION, 
			ADDRESS_1 ,
			ADDRESS_2 ,
			ZIP_CODE ,
			PHONE_NUM ,
			BIRTH_DATE ,
			MARRIAGE_DATE ,
			CAREER_DATE ,
			ENTRY_DATE ,
			SCHOOL_MAJOR ,
			SCHOOL_CAREER ,
			MOONCAL_YN ,
			CERT_YN ,
			MANAGER_YN ,
			APPROVAL_YN ,
			PHOTO_PATH ,
			CERTFILE_JOB_PATH, 
			CERTFILE_SCHOOL_PATH ,
			UPD_DATE ,
			RET_DATE ,
			UPD_ID, 
			NOTE ,
			TEMP_COLUM 
		FROM
		    TB_MEMBER
		WHERE
		    MEMBER_NO IN
	    <foreach collection="list" item="item"  open="(" close=")" separator=",">
	        #{item.member_no}
	    </foreach>
	</select>
</mapper>
